// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package userclient

import (
	"context"
	user2 "fiber-g/apps/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateUserReq  = user2.CreateUserReq
	CreateUserResp = user2.CreateUserResp

	User interface {
		CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) CreateUser(ctx context.Context, in *CreateUserReq, opts ...grpc.CallOption) (*CreateUserResp, error) {
	client := user2.NewUserClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}
