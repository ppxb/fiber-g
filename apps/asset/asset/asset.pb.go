// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: asset.proto

package asset

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAssetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial         string `protobuf:"bytes,1,opt,name=serial,proto3" json:"serial,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProjectId      string `protobuf:"bytes,3,opt,name=projectId,proto3" json:"projectId,omitempty"`
	SonProjectId   string `protobuf:"bytes,4,opt,name=sonProjectId,proto3" json:"sonProjectId,omitempty"`
	PartProjectId  string `protobuf:"bytes,5,opt,name=partProjectId,proto3" json:"partProjectId,omitempty"`
	Type           string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	SubDistrict    string `protobuf:"bytes,7,opt,name=subDistrict,proto3" json:"subDistrict,omitempty"`
	Brand          string `protobuf:"bytes,8,opt,name=brand,proto3" json:"brand,omitempty"`
	Model          string `protobuf:"bytes,9,opt,name=model,proto3" json:"model,omitempty"`
	Unit           string `protobuf:"bytes,10,opt,name=unit,proto3" json:"unit,omitempty"`
	Params         string `protobuf:"bytes,11,opt,name=params,proto3" json:"params,omitempty"`
	Value          string `protobuf:"bytes,12,opt,name=value,proto3" json:"value,omitempty"`
	Address        string `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	Long           string `protobuf:"bytes,14,opt,name=long,proto3" json:"long,omitempty"`
	Lat            string `protobuf:"bytes,15,opt,name=lat,proto3" json:"lat,omitempty"`
	ImgUrl         string `protobuf:"bytes,16,opt,name=imgUrl,proto3" json:"imgUrl,omitempty"`
	SystemLoginUrl string `protobuf:"bytes,17,opt,name=systemLoginUrl,proto3" json:"systemLoginUrl,omitempty"`
	SystemLoginPwd string `protobuf:"bytes,18,opt,name=systemLoginPwd,proto3" json:"systemLoginPwd,omitempty"`
}

func (x *CreateAssetReq) Reset() {
	*x = CreateAssetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetReq) ProtoMessage() {}

func (x *CreateAssetReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetReq.ProtoReflect.Descriptor instead.
func (*CreateAssetReq) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAssetReq) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *CreateAssetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAssetReq) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateAssetReq) GetSonProjectId() string {
	if x != nil {
		return x.SonProjectId
	}
	return ""
}

func (x *CreateAssetReq) GetPartProjectId() string {
	if x != nil {
		return x.PartProjectId
	}
	return ""
}

func (x *CreateAssetReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateAssetReq) GetSubDistrict() string {
	if x != nil {
		return x.SubDistrict
	}
	return ""
}

func (x *CreateAssetReq) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *CreateAssetReq) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateAssetReq) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *CreateAssetReq) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *CreateAssetReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateAssetReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateAssetReq) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

func (x *CreateAssetReq) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *CreateAssetReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *CreateAssetReq) GetSystemLoginUrl() string {
	if x != nil {
		return x.SystemLoginUrl
	}
	return ""
}

func (x *CreateAssetReq) GetSystemLoginPwd() string {
	if x != nil {
		return x.SystemLoginPwd
	}
	return ""
}

type CreateAssetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CreateAssetResp) Reset() {
	*x = CreateAssetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssetResp) ProtoMessage() {}

func (x *CreateAssetResp) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssetResp.ProtoReflect.Descriptor instead.
func (*CreateAssetResp) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAssetResp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ParentProjectId string `protobuf:"bytes,2,opt,name=ParentProjectId,proto3" json:"ParentProjectId,omitempty"`
	Level           int64  `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
}

func (x *ProjectReq) Reset() {
	*x = ProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectReq) ProtoMessage() {}

func (x *ProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectReq.ProtoReflect.Descriptor instead.
func (*ProjectReq) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectReq) GetParentProjectId() string {
	if x != nil {
		return x.ParentProjectId
	}
	return ""
}

func (x *ProjectReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

type ProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ProjectResp) Reset() {
	*x = ProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResp) ProtoMessage() {}

func (x *ProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResp.ProtoReflect.Descriptor instead.
func (*ProjectResp) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectResp) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ProjectListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *ProjectListReq) Reset() {
	*x = ProjectListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListReq) ProtoMessage() {}

func (x *ProjectListReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListReq.ProtoReflect.Descriptor instead.
func (*ProjectListReq) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ProjectListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*ProjectInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProjectListResp) Reset() {
	*x = ProjectListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectListResp) ProtoMessage() {}

func (x *ProjectListResp) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectListResp.ProtoReflect.Descriptor instead.
func (*ProjectListResp) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectListResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProjectListResp) GetData() []*ProjectInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentProjectId string `protobuf:"bytes,3,opt,name=parentProjectId,proto3" json:"parentProjectId,omitempty"`
	CreatedAt       string `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ProjectInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectInfo) GetParentProjectId() string {
	if x != nil {
		return x.ParentProjectId
	}
	return ""
}

func (x *ProjectInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *UploadReq) Reset() {
	*x = UploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReq) ProtoMessage() {}

func (x *UploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReq.ProtoReflect.Descriptor instead.
func (*UploadReq) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{7}
}

func (x *UploadReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type UploadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success int64 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Fail    int64 `protobuf:"varint,2,opt,name=fail,proto3" json:"fail,omitempty"`
}

func (x *UploadResp) Reset() {
	*x = UploadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResp) ProtoMessage() {}

func (x *UploadResp) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResp.ProtoReflect.Descriptor instead.
func (*UploadResp) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{8}
}

func (x *UploadResp) GetSuccess() int64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *UploadResp) GetFail() int64 {
	if x != nil {
		return x.Fail
	}
	return 0
}

type PageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *PageReq) Reset() {
	*x = PageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageReq) ProtoMessage() {}

func (x *PageReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageReq.ProtoReflect.Descriptor instead.
func (*PageReq) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{9}
}

func (x *PageReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt       string  `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       string  `protobuf:"bytes,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Uuid            string  `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ProjectId       string  `protobuf:"bytes,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	SonProjectId    string  `protobuf:"bytes,5,opt,name=sonProjectId,proto3" json:"sonProjectId,omitempty"`
	PartProjectId   string  `protobuf:"bytes,6,opt,name=partProjectId,proto3" json:"partProjectId,omitempty"`
	ProjectName     string  `protobuf:"bytes,7,opt,name=projectName,proto3" json:"projectName,omitempty"`
	SonProjectName  string  `protobuf:"bytes,8,opt,name=sonProjectName,proto3" json:"sonProjectName,omitempty"`
	PartProjectName string  `protobuf:"bytes,9,opt,name=partProjectName,proto3" json:"partProjectName,omitempty"`
	Serial          string  `protobuf:"bytes,10,opt,name=serial,proto3" json:"serial,omitempty"`
	Name            string  `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Type            string  `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	Kind            string  `protobuf:"bytes,13,opt,name=kind,proto3" json:"kind,omitempty"`
	SubDistrict     string  `protobuf:"bytes,14,opt,name=subDistrict,proto3" json:"subDistrict,omitempty"`
	Brand           string  `protobuf:"bytes,15,opt,name=brand,proto3" json:"brand,omitempty"`
	Specs           string  `protobuf:"bytes,16,opt,name=specs,proto3" json:"specs,omitempty"`
	Unit            string  `protobuf:"bytes,17,opt,name=unit,proto3" json:"unit,omitempty"`
	Params          string  `protobuf:"bytes,18,opt,name=params,proto3" json:"params,omitempty"`
	Value           float64 `protobuf:"fixed64,19,opt,name=value,proto3" json:"value,omitempty"`
	Address         string  `protobuf:"bytes,20,opt,name=address,proto3" json:"address,omitempty"`
	Long            string  `protobuf:"bytes,21,opt,name=long,proto3" json:"long,omitempty"`
	Lat             string  `protobuf:"bytes,22,opt,name=lat,proto3" json:"lat,omitempty"`
	ImgUrl          string  `protobuf:"bytes,23,opt,name=imgUrl,proto3" json:"imgUrl,omitempty"`
	SystemLoginUrl  string  `protobuf:"bytes,24,opt,name=systemLoginUrl,proto3" json:"systemLoginUrl,omitempty"`
	SystemLoginPwd  string  `protobuf:"bytes,25,opt,name=systemLoginPwd,proto3" json:"systemLoginPwd,omitempty"`
	IotNetSerial    string  `protobuf:"bytes,26,opt,name=iotNetSerial,proto3" json:"iotNetSerial,omitempty"`
	NetStatus       string  `protobuf:"bytes,27,opt,name=netStatus,proto3" json:"netStatus,omitempty"`
	EmeterSerial    string  `protobuf:"bytes,28,opt,name=emeterSerial,proto3" json:"emeterSerial,omitempty"`
	EmeterStatus    string  `protobuf:"bytes,29,opt,name=emeterStatus,proto3" json:"emeterStatus,omitempty"`
}

func (x *AssetInfo) Reset() {
	*x = AssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetInfo) ProtoMessage() {}

func (x *AssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetInfo.ProtoReflect.Descriptor instead.
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{10}
}

func (x *AssetInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AssetInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *AssetInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AssetInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AssetInfo) GetSonProjectId() string {
	if x != nil {
		return x.SonProjectId
	}
	return ""
}

func (x *AssetInfo) GetPartProjectId() string {
	if x != nil {
		return x.PartProjectId
	}
	return ""
}

func (x *AssetInfo) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *AssetInfo) GetSonProjectName() string {
	if x != nil {
		return x.SonProjectName
	}
	return ""
}

func (x *AssetInfo) GetPartProjectName() string {
	if x != nil {
		return x.PartProjectName
	}
	return ""
}

func (x *AssetInfo) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *AssetInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssetInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AssetInfo) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AssetInfo) GetSubDistrict() string {
	if x != nil {
		return x.SubDistrict
	}
	return ""
}

func (x *AssetInfo) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *AssetInfo) GetSpecs() string {
	if x != nil {
		return x.Specs
	}
	return ""
}

func (x *AssetInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *AssetInfo) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *AssetInfo) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AssetInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AssetInfo) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

func (x *AssetInfo) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *AssetInfo) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *AssetInfo) GetSystemLoginUrl() string {
	if x != nil {
		return x.SystemLoginUrl
	}
	return ""
}

func (x *AssetInfo) GetSystemLoginPwd() string {
	if x != nil {
		return x.SystemLoginPwd
	}
	return ""
}

func (x *AssetInfo) GetIotNetSerial() string {
	if x != nil {
		return x.IotNetSerial
	}
	return ""
}

func (x *AssetInfo) GetNetStatus() string {
	if x != nil {
		return x.NetStatus
	}
	return ""
}

func (x *AssetInfo) GetEmeterSerial() string {
	if x != nil {
		return x.EmeterSerial
	}
	return ""
}

func (x *AssetInfo) GetEmeterStatus() string {
	if x != nil {
		return x.EmeterStatus
	}
	return ""
}

type AssetListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*AssetInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AssetListResp) Reset() {
	*x = AssetListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetListResp) ProtoMessage() {}

func (x *AssetListResp) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetListResp.ProtoReflect.Descriptor instead.
func (*AssetListResp) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{11}
}

func (x *AssetListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AssetListResp) GetData() []*AssetInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProjectFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Uuid     string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ProjectFilterReq) Reset() {
	*x = ProjectFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_asset_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectFilterReq) ProtoMessage() {}

func (x *ProjectFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_asset_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectFilterReq.ProtoReflect.Descriptor instead.
func (*ProjectFilterReq) Descriptor() ([]byte, []int) {
	return file_asset_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectFilterReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectFilterReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProjectFilterReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

var File_asset_proto protoreflect.FileDescriptor

var file_asset_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x22, 0xf0, 0x03, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x77,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x77, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x60,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x21, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1f, 0x0a, 0x09, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x61,
	0x69, 0x6c, 0x22, 0x39, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xcd, 0x06,
	0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67,
	0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x77, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x50, 0x77, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6f, 0x74, 0x4e, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6f, 0x74, 0x4e, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a,
	0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x32, 0xee, 0x02, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x11, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_asset_proto_rawDescOnce sync.Once
	file_asset_proto_rawDescData = file_asset_proto_rawDesc
)

func file_asset_proto_rawDescGZIP() []byte {
	file_asset_proto_rawDescOnce.Do(func() {
		file_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_asset_proto_rawDescData)
	})
	return file_asset_proto_rawDescData
}

var file_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_asset_proto_goTypes = []interface{}{
	(*CreateAssetReq)(nil),   // 0: asset.CreateAssetReq
	(*CreateAssetResp)(nil),  // 1: asset.CreateAssetResp
	(*ProjectReq)(nil),       // 2: asset.ProjectReq
	(*ProjectResp)(nil),      // 3: asset.ProjectResp
	(*ProjectListReq)(nil),   // 4: asset.ProjectListReq
	(*ProjectListResp)(nil),  // 5: asset.ProjectListResp
	(*ProjectInfo)(nil),      // 6: asset.ProjectInfo
	(*UploadReq)(nil),        // 7: asset.UploadReq
	(*UploadResp)(nil),       // 8: asset.UploadResp
	(*PageReq)(nil),          // 9: asset.PageReq
	(*AssetInfo)(nil),        // 10: asset.AssetInfo
	(*AssetListResp)(nil),    // 11: asset.AssetListResp
	(*ProjectFilterReq)(nil), // 12: asset.ProjectFilterReq
}
var file_asset_proto_depIdxs = []int32{
	6,  // 0: asset.ProjectListResp.data:type_name -> asset.ProjectInfo
	10, // 1: asset.AssetListResp.data:type_name -> asset.AssetInfo
	0,  // 2: asset.Asset.CreateAsset:input_type -> asset.CreateAssetReq
	2,  // 3: asset.Asset.CreateProject:input_type -> asset.ProjectReq
	4,  // 4: asset.Asset.GetProjectList:input_type -> asset.ProjectListReq
	7,  // 5: asset.Asset.ImportAssets:input_type -> asset.UploadReq
	9,  // 6: asset.Asset.GetAssetList:input_type -> asset.PageReq
	12, // 7: asset.Asset.GetFilterAssetList:input_type -> asset.ProjectFilterReq
	1,  // 8: asset.Asset.CreateAsset:output_type -> asset.CreateAssetResp
	3,  // 9: asset.Asset.CreateProject:output_type -> asset.ProjectResp
	5,  // 10: asset.Asset.GetProjectList:output_type -> asset.ProjectListResp
	8,  // 11: asset.Asset.ImportAssets:output_type -> asset.UploadResp
	11, // 12: asset.Asset.GetAssetList:output_type -> asset.AssetListResp
	11, // 13: asset.Asset.GetFilterAssetList:output_type -> asset.AssetListResp
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_asset_proto_init() }
func file_asset_proto_init() {
	if File_asset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_asset_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_asset_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_asset_proto_goTypes,
		DependencyIndexes: file_asset_proto_depIdxs,
		MessageInfos:      file_asset_proto_msgTypes,
	}.Build()
	File_asset_proto = out.File
	file_asset_proto_rawDesc = nil
	file_asset_proto_goTypes = nil
	file_asset_proto_depIdxs = nil
}
