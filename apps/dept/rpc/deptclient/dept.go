// Code generated by goctl. DO NOT EDIT!
// Source: dept.proto

package deptclient

import (
	"context"

	"fiber-g/apps/dept/rpc/dept"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateDeptReq  = dept.CreateDeptReq
	CreateDeptResp = dept.CreateDeptResp

	Dept interface {
		CreateDept(ctx context.Context, in *CreateDeptReq, opts ...grpc.CallOption) (*CreateDeptResp, error)
	}

	defaultDept struct {
		cli zrpc.Client
	}
)

func NewDept(cli zrpc.Client) Dept {
	return &defaultDept{
		cli: cli,
	}
}

func (m *defaultDept) CreateDept(ctx context.Context, in *CreateDeptReq, opts ...grpc.CallOption) (*CreateDeptResp, error) {
	client := dept.NewDeptClient(m.cli.Conn())
	return client.CreateDept(ctx, in, opts...)
}
