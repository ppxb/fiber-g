// Code generated by goctl. DO NOT EDIT.
package types

type HealthResp struct {
	Ping string `json:"ping"`
}

type PageInfoReq struct {
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
}

type ResultWithData struct {
	Code      int32                  `json:"code"`
	Msg       string                 `json:"msg"`
	Data      map[string]interface{} `json:"data"`
	Timestamp int64                  `json:"timestamp"`
}

type ResultWithMsg struct {
	Code      int32  `json:"code"`
	Msg       string `json:"msg"`
	Timestamp int64  `json:"timestamp"`
}

type CreateDeptReq struct {
	Name     string `json:"name"`
	ParentId string `json:"parentId"`
	Level    int64  `json:"level"`
	HeaderId string `json:"headerId"`
}

type CreateDeptResp struct {
	UUID string `json:"uuid"`
}

type CreateUserReq struct {
	Mobile string `json:"mobile"`
	Name   string `json:"name"`
	Email  string `json:"email"`
	Avatar string `json:"avatar"`
	DeptId string `json:"deptId"`
	RoleId string `json:"roleId"`
}

type CreateUserResp struct {
	UUID string `json:"uuid"`
}

type Asset struct {
	ProjectId       string  `json:"projectId"`
	SonProjectId    string  `json:"sonProjectId"`
	PartProjectId   string  `json:"partProjectId"`
	ProjectName     string  `json:"projectName"`
	SonProjectName  string  `json:"sonProjectName"`
	PartProjectName string  `json:"partProjectName"`
	Serial          string  `json:"serial"`
	Name            string  `json:"name"`
	Type            string  `json:"type"`
	Kind            string  `json:"kind"`
	SubDistrict     string  `json:"subDistrict"`
	Brand           string  `json:"brand"`
	Specs           string  `json:"specs"`
	Unit            string  `json:"unit"`
	Params          string  `json:"params"`
	Value           float64 `json:"value"`
	Address         string  `json:"address"`
	Long            string  `json:"long"`
	Lat             string  `json:"lat"`
	ImgUrl          string  `json:"imgUrl"`
	SystemLoginUrl  string  `json:"systemLoginUrl"`
	SystemLoginPwd  string  `json:"systemLoginPwd"`
	IotNetSerial    string  `json:"iotNetSerial"`
	NetStatus       string  `json:"netStatus"`
	EmeterSerial    string  `json:"emeterSerial"`
	EmeterStatus    string  `json:"emeterStatus"`
}

type Project struct {
	Name            string `json:"name"`
	ParentProjectId string `json:"parentProjectId"`
	Level           int64  `json:"level"`
}

type FilterAssetListReq struct {
	Page     int64 `json:"page"`
	PageSize int64 `json:"pageSize"`
	Query
}

type Query struct {
	UUID string `json:"uuid"`
}
